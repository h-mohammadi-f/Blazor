@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href=""><img src="icons/axe.png"/>Blazor Battles</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>
<AuthorizeView>

    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        <ul class="nav flex-column">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="build">
                    <span class="oi oi-wrench" aria-hidden="true"></span> Build
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="army">
                    <span class="oi oi-people" aria-hidden="true"></span> My Army
                </NavLink>
            </li>
            <li class="nav-item px-3">
                <a class="nav-link" @onclick="LogOut" style="cursor:pointer">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> LogOut
                </a>
            </li>
        </ul>
    </div>
</AuthorizeView>
@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async void LogOut()
    {
        await LocalStorage.RemoveItemAsync("isAuthenticated");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("/");
    }
}
